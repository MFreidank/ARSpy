include("ars.jl")
include("ars_defs.jl")

upperHull = [HullNode(3.995999999999996,3.991999999999992,-Inf,-2.0,0.0018422607166365945),HullNode(2.9939999999999998,1.9920079999999998,-2.0,-1.996,2.9742698274522277e-5),HullNode(3.995999999999996,3.9919999999999924,-1.996,-1.331554369579719,0.02475975522918407),HullNode(0.998,0.0,-1.331554369579719,-0.998,0.04211918296053056),HullNode(2.9939999999999998,1.9920079999999998,-0.998,-0.499,0.17130889715661873),HullNode(-0.998,0.0,-0.499,0.0,0.2599401612387555),HullNode(0.998,0.0,0.0,0.499,0.2599401612387555),HullNode(-2.9939999999999998,1.9920079999999998,0.499,0.998,0.17130889715661873),HullNode(-0.998,0.0,0.998,1.331554369579719,0.04211918296053056),HullNode(-3.995999999999996,3.9919999999999924,1.331554369579719,1.996,0.02475975522918407),HullNode(-2.9939999999999998,1.9920079999999998,1.996,2.0,2.9742698274522277e-5),HullNode(-3.995999999999996,3.991999999999992,2.0,Inf,0.0018422607166365945)]


n_rand_calls = 0
function rand()
    cmd = `python -c "from numpy.random import rand, seed; seed(1); [rand() for _ in range($n_rand_calls)]; print(rand())"`
    global n_rand_calls += 1
    rand_val = readall(cmd)
    return parse(Float64, rand_val)
end

x = arsSampleUpperHull(upperHull)

println(x)
